diff --git a/dats.cfg.example b/dats.cfg.example
index 73c094f..a87f390 100644
--- a/dats.cfg.example
+++ b/dats.cfg.example
@@ -71,6 +71,8 @@ level=INFO
 
 [tester]
 ip=127.0.0.1
+; Default value: 22
+;ssh_port=22
 user=root
 
 ; Default value: /root/dpdk
@@ -85,6 +87,8 @@ prox_dir=/root/dppd-PROX-v021
 
 [sut]
 ip=XXX.XXX.XXX.XXX
+; Default value: 22
+;ssh_port=22
 user=root
 
 ; Default value: /root/dpdk
diff --git a/dats/config.py b/dats/config.py
index 23b170c..a056e53 100644
--- a/dats/config.py
+++ b/dats/config.py
@@ -53,12 +53,14 @@ configurationOptions = (
     ( 'logOverwrite',   'logging',  'overwrite', 1 ),
 
     ( 'testerIp',       'tester',   'ip',        None ),
+    ( 'testerSshPort',       'tester',   'ssh_port',        '22' ),
     ( 'testerUser',     'tester',   'user',      'root' ),
     ( 'testerDpdkDir',  'tester',   'rte_sdk',   '/root/dpdk' ),
     ( 'testerDpdkTgt',  'tester',   'rte_target', 'x86_64-native-linuxapp-gcc' ),
     ( 'testerProxDir',  'tester',   'prox_dir',  '/root/prox' ),
 
     ( 'sutIp',          'sut',      'ip',        None ),
+    ( 'sutSshPort',       'sut',   'ssh_port',        '22' ),
     ( 'sutUser',        'sut',      'user',      'root' ),
     ( 'sutDpdkDir',     'sut',      'rte_sdk',   '/root/dpdk' ),
     ( 'sutDpdkTgt',     'sut',      'rte_target', 'x86_64-native-linuxapp-gcc' ),
diff --git a/dats/remote_control.py b/dats/remote_control.py
index f835abb..5a56263 100644
--- a/dats/remote_control.py
+++ b/dats/remote_control.py
@@ -42,10 +42,10 @@ from dats.prox import prox
 import dats.config as config
 
 
-def ssh(user, ip, cmd):
+def ssh(user, ip, port, cmd):
     """Execute ssh command"""
     logging.debug("Command to execute over SSH: '%s'", cmd)
-    ssh_options = ""
+    ssh_options = "-p " + port + " "
     ssh_options += "-o StrictHostKeyChecking=no "
     ssh_options += "-o UserKnownHostsFile=/dev/null "
     ssh_options += "-o LogLevel=error "
@@ -58,16 +58,17 @@ def ssh(user, ip, cmd):
 
     return ret
 
-def ssh_check_quit(obj, user, ip, cmd):
-    ret = ssh(user, ip, cmd)
+def ssh_check_quit(obj, user, ip, port, cmd):
+    ret = ssh(user, ip, port, cmd)
     if ret['ret'] != 0:
         obj._err = True
         obj._err_str = ret['out']
         exit(-1)
 
 class remote_system:
-    def __init__(self, user, ip, dpdk_dir, dpdk_target, prox_dir):
+    def __init__(self, user, ip, port, dpdk_dir, dpdk_target, prox_dir):
         self._ip          = ip
+	 self._port	  = port
         self._user        = user
         self._dpdk_dir    = dpdk_dir
         self._dpdk_target = dpdk_target
@@ -78,7 +79,7 @@ class remote_system:
 
     def run_cmd(self, cmd):
         """Execute command over ssh"""
-        return ssh(self._user, self._ip, cmd)
+        return ssh(self._user, self._ip, self._port, cmd)
 
     def mount_hugepages(self, directory="/mnt/huge"):
         """Mount the hugepages on the remote system"""
@@ -146,7 +147,7 @@ class remote_system:
         return res['out'].find("drv=igb_uio") != -1
 
     def run_cmd_forked(self, cmd):
-        thread.start_new_thread(ssh, (self._user, self._ip, cmd))
+        thread.start_new_thread(ssh, (self._user, self._ip, self._port, cmd))
         return 0
 
     def get_core_count(self):
@@ -167,7 +168,7 @@ class remote_system:
             + "./build/prox " + prox_args
         self._err = False
         logging.debug("Starting PROX with command [%s]", prox_cmd)
-        thread.start_new_thread(ssh_check_quit, (self, self._user, self._ip, prox_cmd))
+        thread.start_new_thread(ssh_check_quit, (self, self._user, self._ip, self._port, prox_cmd))
         prox = None
         logging.debug("Waiting for PROX to settle")
         while prox is None:
@@ -213,7 +214,7 @@ class remote_system:
     def scp(self, local, remote):
         """Copy a file from the local system to the remote system"""
         logging.debug("Initiating SCP: %s -> %s", local, remote)
-        cmd = "scp " + local + " " + self._user + "@" + self._ip + ":" + remote
+        cmd = "scp " + "-P " + self_.port + " " + local + " " + self._user + "@" + self._ip + ":" + remote
         logging.debug("SCP command: [%s]", cmd)
         running = os.popen(cmd)
         ret = {}
diff --git a/dats/test/base.py b/dats/test/base.py
index e753130..9ba1e43 100644
--- a/dats/test/base.py
+++ b/dats/test/base.py
@@ -171,12 +171,12 @@ class TestBase(object):
 
         if remote_name == "sut":
             self._remotes[remote_name] = remote_system(config.getOption('sutUser'),
-                    config.getOption('sutIp'), config.getOption('sutDpdkDir'),
+                    config.getOption('sutIp'), config.getOption('sutSshPort'),config.getOption('sutDpdkDir'),
                     config.getOption('sutDpdkTgt'),
                     config.getOption('sutProxDir'))
         elif remote_name == "tester":
             self._remotes[remote_name] = remote_system(config.getOption('testerUser'),
-                    config.getOption('testerIp'), config.getOption('testerDpdkDir'),
+                    config.getOption('testerIp'),config.getOption('testerSshPort'), config.getOption('testerDpdkDir'),
                     config.getOption('testerDpdkTgt'),
                     config.getOption('testerProxDir'))
         else:
